{% set version = "0.3.7" %}


package:
  name: lue
  version: {{ version }}


source:
  # url: https://github.com/computationalgeography/lue/releases/download/{{ version }}/lue-{{ version }}.tar.gz
  # url: https://github.com/computationalgeography/lue/archive/refs/tags/{{ version }}.tar.gz
  # url: https://pcraster.geo.uu.nl/pcraster/packages/src/lue-{{ version }}.tar.bz2
  url: https://lue.computationalgeography.org/download/lue-{{ version }}.tar.bz2
  sha256: 0015ce756d9af4177118761d642313df1c5a8bb736419d52cbfb593e26611dae


build:
  number: 6


requirements:
  build:
    # Section for the native build platform. Think "build-tools", that run on the native platform,
    # but output results for the target platform.
    # Dependencies required during the build phase not needed on the host.
    - python                                     # [build_platform != target_platform]
    - cross-python_{{ target_platform }}         # [build_platform != target_platform]
    - numpy                                      # [build_platform != target_platform]
    - pybind11                                   # [build_platform != target_platform]
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
    - make                                       # [unix]
    - git
    - conan <2
    - cmake
    - ninja                                      # [not win]

  host:
    # Section for the target platform. Might not be the same as the build platform!
    # Dependencies required during build phase needed on the host.
    - python
    - numpy
    - libboost-headers
    - hdf5
    - glfw                                       # [not arm64]
    - hpx
    - libgdal
    - libvulkan-headers                          # [not arm64]
    - libvulkan-loader                           # [not arm64]
    - pybind11
    - fmt
    - docopt  # templatize.py
    - docopt.cpp
    - jinja2  # templatize.py
    - nlohmann_json

  run:
    # Dependencies required for using the software.
    # Stuff required when using LUE.
    - docopt  # lue.qa
    - docopt.cpp
    - hdf5
    - glfw                                       # [not arm64]
    - hpx
    - libgdal
    - libvulkan-loader                           # [not arm64]
    - matplotlib-base  # lue.qa
    - python
    - python-dateutil  # lue.qa


test:
  commands:
    - lue_translate -h
    - lue_validate -h
    - lue_scalability -h                         # [not win]
    - lue_view -h                                # [not arm64]


about:
  home: https://lue.computationalgeography.org/
  license: MIT
  license_file: LICENSE.txt
  summary: LUE scientific database and environmental modelling framework.
  description: |
    LUE is software supporting the representation and numerical simulation of geographical
    systems. Using LUE, model developers can develop models using a syntax that looks very
    similar to map algebra, in either Python or C++. Given such a model, modellers can simulate
    real-world geographical systems with a large extent and at high resolutions. LUE models
    can be executed on small laptops and on large cluster partitions.

    LUE is the result of multiple research projects performed by the Computational Geography
    group at Utrecht University in the Netherlands. One of the focus areas of this group is
    to improve on the concepts and design of numerical simulation frameworks for geographical
    systems, with respect to their functionality and performance.

    LUE supports both agent-based and field-based modelling of geographical systems, with the
    support for field-based modelling currently being the most mature.
  doc_url: https://lue.computationalgeography.org/doc/
  dev_url: https://github.com/computationalgeography/lue/


extra:
  recipe-maintainers:
    - kordejong
    - oliverschmitz
